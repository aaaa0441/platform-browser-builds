{"version":3,"file":"dom_events.js","sourceRoot":"","sources":["../../../../../../packages/platform-browser/src/dom/events/dom_events.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Inject, Injectable, NgZone} from '@angular/core';\n// Import zero symbols from zone.js. This causes the zone ambient type to be\n// added to the type-checker, without emitting any runtime module load statement\nimport {} from 'zone.js';\n\nimport {DOCUMENT} from '../dom_tokens';\n\nimport {EventManagerPlugin} from './event_manager';\n\n/**\n * Detect if Zone is present. If it is then use simple zone aware 'addEventListener'\n * since Angular can do much more\n * efficient bookkeeping than Zone can, because we have additional information. This speeds up\n * addEventListener by 3x.\n */\nconst __symbol__ =\n    (typeof Zone !== 'undefined') && (Zone as any)['__symbol__'] || function(v: string): string {\n      return '__zone_symbol__' + v;\n    };\nconst ADD_EVENT_LISTENER: 'addEventListener' = __symbol__('addEventListener');\nconst REMOVE_EVENT_LISTENER: 'removeEventListener' = __symbol__('removeEventListener');\n\nconst symbolNames: {[key: string]: string} = {};\n\nconst FALSE = 'FALSE';\nconst ANGULAR = 'ANGULAR';\nconst NATIVE_ADD_LISTENER = 'addEventListener';\nconst NATIVE_REMOVE_LISTENER = 'removeEventListener';\n\n// use the same symbol string which is used in zone.js\nconst stopSymbol = '__zone_symbol__propagationStopped';\nconst stopMethodSymbol = '__zone_symbol__stopImmediatePropagation';\n\nconst blackListedEvents: string[] =\n    (typeof Zone !== 'undefined') && (Zone as any)[__symbol__('BLACK_LISTED_EVENTS')];\nlet blackListedMap: {[eventName: string]: string};\nif (blackListedEvents) {\n  blackListedMap = {};\n  blackListedEvents.forEach(eventName => { blackListedMap[eventName] = eventName; });\n}\n\nconst isBlackListedEvent = function(eventName: string) {\n  if (!blackListedMap) {\n    return false;\n  }\n  return blackListedMap.hasOwnProperty(eventName);\n};\n\ninterface TaskData {\n  zone: any;\n  handler: Function;\n}\n\n// a global listener to handle all dom event,\n// so we do not need to create a closure every time\nconst globalListener = function(event: Event) {\n  const symbolName = symbolNames[event.type];\n  if (!symbolName) {\n    return;\n  }\n  const taskDatas: TaskData[] = this[symbolName];\n  if (!taskDatas) {\n    return;\n  }\n  const args: any = [event];\n  if (taskDatas.length === 1) {\n    // if taskDatas only have one element, just invoke it\n    const taskData = taskDatas[0];\n    if (taskData.zone !== Zone.current) {\n      // only use Zone.run when Zone.current not equals to stored zone\n      return taskData.zone.run(taskData.handler, this, args);\n    } else {\n      return taskData.handler.apply(this, args);\n    }\n  } else {\n    // copy tasks as a snapshot to avoid event handlers remove\n    // itself or others\n    const copiedTasks = taskDatas.slice();\n    for (let i = 0; i < copiedTasks.length; i++) {\n      // if other listener call event.stopImmediatePropagation\n      // just break\n      if ((event as any)[stopSymbol] === true) {\n        break;\n      }\n      const taskData = copiedTasks[i];\n      if (taskData.zone !== Zone.current) {\n        // only use Zone.run when Zone.current not equals to stored zone\n        taskData.zone.run(taskData.handler, this, args);\n      } else {\n        taskData.handler.apply(this, args);\n      }\n    }\n  }\n};\n\n@Injectable()\nexport class DomEventsPlugin extends EventManagerPlugin {\n  constructor(@Inject(DOCUMENT) doc: any, private ngZone: NgZone) {\n    super(doc);\n\n    this.patchEvent();\n  }\n\n  private patchEvent() {\n    if (!Event || !Event.prototype) {\n      return;\n    }\n    if ((Event.prototype as any)[stopMethodSymbol]) {\n      // already patched by zone.js\n      return;\n    }\n    const delegate = (Event.prototype as any)[stopMethodSymbol] =\n        Event.prototype.stopImmediatePropagation;\n    Event.prototype.stopImmediatePropagation = function() {\n      if (this) {\n        this[stopSymbol] = true;\n      }\n\n      // should call native delegate in case\n      // in some environment part of the application\n      // will not use the patched Event\n      delegate && delegate.apply(this, arguments);\n    };\n  }\n\n  // This plugin should come last in the list of plugins, because it accepts all\n  // events.\n  supports(eventName: string): boolean { return true; }\n\n  addEventListener(element: HTMLElement, eventName: string, handler: Function): Function {\n    /**\n     * This code is about to add a listener to the DOM. If Zone.js is present, than\n     * `addEventListener` has been patched. The patched code adds overhead in both\n     * memory and speed (3x slower) than native. For this reason if we detect that\n     * Zone.js is present we use a simple version of zone aware addEventListener instead.\n     * The result is faster registration and the zone will be restored.\n     * But ZoneSpec.onScheduleTask, ZoneSpec.onInvokeTask, ZoneSpec.onCancelTask\n     * will not be invoked\n     * We also do manual zone restoration in element.ts renderEventHandlerClosure method.\n     *\n     * NOTE: it is possible that the element is from different iframe, and so we\n     * have to check before we execute the method.\n     */\n    const self = this;\n    const zoneJsLoaded = element[ADD_EVENT_LISTENER];\n    let callback: EventListener = handler as EventListener;\n    // if zonejs is loaded and current zone is not ngZone\n    // we keep Zone.current on target for later restoration.\n    if (zoneJsLoaded && (!NgZone.isInAngularZone() || isBlackListedEvent(eventName))) {\n      let symbolName = symbolNames[eventName];\n      if (!symbolName) {\n        symbolName = symbolNames[eventName] = __symbol__(ANGULAR + eventName + FALSE);\n      }\n      let taskDatas: TaskData[] = (element as any)[symbolName];\n      const globalListenerRegistered = taskDatas && taskDatas.length > 0;\n      if (!taskDatas) {\n        taskDatas = (element as any)[symbolName] = [];\n      }\n\n      const zone = isBlackListedEvent(eventName) ? Zone.root : Zone.current;\n      if (taskDatas.length === 0) {\n        taskDatas.push({zone: zone, handler: callback});\n      } else {\n        let callbackRegistered = false;\n        for (let i = 0; i < taskDatas.length; i++) {\n          if (taskDatas[i].handler === callback) {\n            callbackRegistered = true;\n            break;\n          }\n        }\n        if (!callbackRegistered) {\n          taskDatas.push({zone: zone, handler: callback});\n        }\n      }\n\n      if (!globalListenerRegistered) {\n        element[ADD_EVENT_LISTENER](eventName, globalListener, false);\n      }\n    } else {\n      element[NATIVE_ADD_LISTENER](eventName, callback, false);\n    }\n    return () => this.removeEventListener(element, eventName, callback);\n  }\n\n  removeEventListener(target: any, eventName: string, callback: Function): void {\n    let underlyingRemove = target[REMOVE_EVENT_LISTENER];\n    // zone.js not loaded, use native removeEventListener\n    if (!underlyingRemove) {\n      return target[NATIVE_REMOVE_LISTENER].apply(target, [eventName, callback, false]);\n    }\n    let symbolName = symbolNames[eventName];\n    let taskDatas: TaskData[] = symbolName && target[symbolName];\n    if (!taskDatas) {\n      // addEventListener not using patched version\n      // just call native removeEventListener\n      return target[NATIVE_REMOVE_LISTENER].apply(target, [eventName, callback, false]);\n    }\n    // fix issue 20532, should be able to remove\n    // listener which was added inside of ngZone\n    let found = false;\n    for (let i = 0; i < taskDatas.length; i++) {\n      // remove listener from taskDatas if the callback equals\n      if (taskDatas[i].handler === callback) {\n        found = true;\n        taskDatas.splice(i, 1);\n        break;\n      }\n    }\n    if (found) {\n      if (taskDatas.length === 0) {\n        // all listeners are removed, we can remove the globalListener from target\n        underlyingRemove.apply(target, [eventName, globalListener, false]);\n      }\n    } else {\n      // not found in taskDatas, the callback may be added inside of ngZone\n      // use native remove listener to remove the callback\n      target[NATIVE_REMOVE_LISTENER].apply(target, [eventName, callback, false]);\n    }\n  }\n}\n"]}